import React, { useState } from 'react';
import './BabyTrackingPage.scss';
import DatePicker from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';
import { FaCalendarAlt } from 'react-icons/fa';
// import your API service here, e.g., import babyTrackingService from '../../services/babyTrackingService';

const BabyTrackingPage = () => {
  const [formData, setFormData] = useState({
    pregnancyId: '',
    checkupDate: null,
    fetalHeartRate: '',
    estimatedWeight: '',
    amnioticFluidIndex: '',
    placentaPosition: '',
    doctorComment: '',
    ultrasoundImageURL: '',
  });

  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [successMessage, setSuccessMessage] = useState('');

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
    // Clear error/success message on input change
    setError('');
    setSuccessMessage('');
  };

  const handleDateChange = (date) => {
    setFormData(prev => ({
      ...prev,
      checkupDate: date
    }));
    // Clear error/success message on input change
    setError('');
    setSuccessMessage('');
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');
    setSuccessMessage('');
    setLoading(true);

    // Basic validation (you might want more robust validation)
    if (!formData.pregnancyId || !formData.checkupDate || !formData.fetalHeartRate || !formData.estimatedWeight || !formData.amnioticFluidIndex || !formData.placentaPosition || !formData.doctorComment || !formData.ultrasoundImageURL) {
      setError('Vui lòng điền đầy đủ thông tin bắt buộc.');
      setLoading(false);
      return;
    }

    // Prepare data for API (adjust keys based on your backend API requirements)
    const dataToSend = {
      PregnancyID: parseInt(formData.pregnancyId),
      CheckupDate: formData.checkupDate ? formData.checkupDate.toISOString() : null, // Format date as ISO string
      FetalHeartRate: parseInt(formData.fetalHeartRate),
      EstimatedWeight: parseFloat(formData.estimatedWeight),
      AmnioticFluidIndex: parseFloat(formData.amnioticFluidIndex),
      PlacentaPosition: formData.placentaPosition,
      DoctorComment: formData.doctorComment,
      UltrasoundImageURL: formData.ultrasoundImageURL,
      // CheckupBabyID and CreatedAt are likely generated by the backend
    };

    console.log('Submitting data:', dataToSend);

    try {
      // Replace with your actual API call
      // const response = await babyTrackingService.createCheckup(dataToSend);
      
      // Simulate API call success
      await new Promise(resolve => setTimeout(resolve, 1500)); 
      console.log('Simulated API success');
      setSuccessMessage('Thông tin Baby Tracking đã được lưu thành công!');
      setFormData({
        pregnancyId: '',
        checkupDate: null,
        fetalHeartRate: '',
        estimatedWeight: '',
        amnioticFluidIndex: '',
        placentaPosition: '',
        doctorComment: '',
        ultrasoundImageURL: '',
      }); // Clear form on success

    } catch (apiError) {
      console.error('API Error:', apiError);
      setError('Lưu thông tin thất bại. Vui lòng thử lại.');
      // More detailed error handling based on apiError structure might be needed
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="baby-tracking-container">
      <div className="baby-tracking-form">
        <h1>Nhập thông tin Baby Tracking</h1>

        {error && <div className="error-message">{error}</div>}
        {successMessage && <div className="success-message">{successMessage}</div>}

        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="pregnancyId">Mã thai kỳ</label>
            <input type="number" id="pregnancyId" name="pregnancyId" value={formData.pregnancyId} onChange={handleChange} required />
          </div>

          <div className="form-group">
            <label htmlFor="checkupDate">Ngày khám</label>
            <DatePicker 
              selected={formData.checkupDate}
              onChange={handleDateChange}
              dateFormat="dd/MM/yyyy"
              placeholderText="Chọn ngày"
              customInput={<input type="text" id="checkupDate" name="checkupDate" required />}
              showIcon
              icon={<FaCalendarAlt className="icon" />}
            />
          </div>

          <div className="form-group">
            <label htmlFor="fetalHeartRate">Nhịp tim thai (bpm)</label>
            <input type="number" id="fetalHeartRate" name="fetalHeartRate" value={formData.fetalHeartRate} onChange={handleChange} required />
          </div>

          <div className="form-group">
            <label htmlFor="estimatedWeight">Cân nặng ước tính (kg)</label>
            <input type="number" step="0.01" id="estimatedWeight" name="estimatedWeight" value={formData.estimatedWeight} onChange={handleChange} required />
          </div>

          <div className="form-group">
            <label htmlFor="amnioticFluidIndex">Chỉ số ối</label>
            <input type="number" step="0.01" id="amnioticFluidIndex" name="amnioticFluidIndex" value={formData.amnioticFluidIndex} onChange={handleChange} required />
          </div>

          <div className="form-group">
            <label htmlFor="placentaPosition">Vị trí nhau thai</label>
            <input type="text" id="placentaPosition" name="placentaPosition" value={formData.placentaPosition} onChange={handleChange} required />
          </div>

          <div className="form-group">
            <label htmlFor="doctorComment">Lời nhận xét của bác sĩ</label>
            <textarea id="doctorComment" name="doctorComment" value={formData.doctorComment} onChange={handleChange} required rows="4"></textarea>
          </div>

          <div className="form-group">
            <label htmlFor="ultrasoundImageURL">Link ảnh siêu âm</label>
            <input type="url" id="ultrasoundImageURL" name="ultrasoundImageURL" value={formData.ultrasoundImageURL} onChange={handleChange} required />
          </div>

          <button type="submit" disabled={loading}>
            {loading ? 'Đang lưu...' : 'Lưu thông tin'}
          </button>
        </form>
      </div>
    </div>
  );
};

export default BabyTrackingPage;